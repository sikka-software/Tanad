{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.templates": {
      "name": "templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "templates_name_idx": {
          "name": "templates_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "templates_type_idx": {
          "name": "templates_type_idx",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "templates_user_id_idx": {
          "name": "templates_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "templates_enterprise_id_enterprises_id_fk": {
          "name": "templates_enterprise_id_enterprises_id_fk",
          "tableFrom": "templates",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "templates_type_check": {
          "name": "templates_type_check",
          "value": "type = ANY (ARRAY['invoice'::text, 'quote'::text])"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "public.documents": {
      "name": "documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_type": {
          "name": "entity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "documents_entity_id_idx": {
          "name": "documents_entity_id_idx",
          "columns": [
            {
              "expression": "entity_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "documents_entity_type_idx": {
          "name": "documents_entity_type_idx",
          "columns": [
            {
              "expression": "entity_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "documents_user_id_idx": {
          "name": "documents_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "documents_enterprise_id_enterprises_id_fk": {
          "name": "documents_enterprise_id_enterprises_id_fk",
          "tableFrom": "documents",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "documents_entity_type_check": {
          "name": "documents_entity_type_check",
          "value": "entity_type = ANY (ARRAY['company'::text, 'expense'::text])"
        }
      },
      "policies": {
        "Users can view their own documents": {
          "name": "Users can view their own documents",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can upload their own documents": {
          "name": "Users can upload their own documents",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own documents": {
          "name": "Users can update their own documents",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own documents": {
          "name": "Users can delete their own documents",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.products": {
      "name": "products",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "sku": {
          "name": "sku",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "unit": {
          "name": "unit",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "products_name_idx": {
          "name": "products_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_sku_idx": {
          "name": "products_sku_idx",
          "columns": [
            {
              "expression": "sku",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_user_id_idx": {
          "name": "products_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "products_enterprise_id_enterprises_id_fk": {
          "name": "products_enterprise_id_enterprises_id_fk",
          "tableFrom": "products",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own products": {
          "name": "Users can read their own products",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own products": {
          "name": "Users can insert their own products",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own products": {
          "name": "Users can update their own products",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own products": {
          "name": "Users can delete their own products",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.employee_requests": {
      "name": "employee_requests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "employee_id": {
          "name": "employee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "attachments": {
          "name": "attachments",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "employee_requests_created_at_idx": {
          "name": "employee_requests_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_employee_id_idx": {
          "name": "employee_requests_employee_id_idx",
          "columns": [
            {
              "expression": "employee_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_status_idx": {
          "name": "employee_requests_status_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_type_idx": {
          "name": "employee_requests_type_idx",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_user_id_idx": {
          "name": "employee_requests_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "employee_requests_employee_id_employees_id_fk": {
          "name": "employee_requests_employee_id_employees_id_fk",
          "tableFrom": "employee_requests",
          "tableTo": "employees",
          "schemaTo": "public",
          "columnsFrom": [
            "employee_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "employee_requests_enterprise_id_enterprises_id_fk": {
          "name": "employee_requests_enterprise_id_enterprises_id_fk",
          "tableFrom": "employee_requests",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own employee requests": {
          "name": "Users can read their own employee requests",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own employee requests": {
          "name": "Users can insert their own employee requests",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own employee requests": {
          "name": "Users can update their own employee requests",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own employee requests": {
          "name": "Users can delete their own employee requests",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.job_listing_jobs": {
      "name": "job_listing_jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "job_listing_id": {
          "name": "job_listing_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "job_id": {
          "name": "job_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "job_listing_jobs_job_id_idx": {
          "name": "job_listing_jobs_job_id_idx",
          "columns": [
            {
              "expression": "job_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listing_jobs_job_listing_id_idx": {
          "name": "job_listing_jobs_job_listing_id_idx",
          "columns": [
            {
              "expression": "job_listing_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "job_listing_jobs_enterprise_id_enterprises_id_fk": {
          "name": "job_listing_jobs_enterprise_id_enterprises_id_fk",
          "tableFrom": "job_listing_jobs",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "job_listing_jobs_job_id_jobs_id_fk": {
          "name": "job_listing_jobs_job_id_jobs_id_fk",
          "tableFrom": "job_listing_jobs",
          "tableTo": "jobs",
          "schemaTo": "public",
          "columnsFrom": [
            "job_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "job_listing_jobs_job_listing_id_job_listings_id_fk": {
          "name": "job_listing_jobs_job_listing_id_job_listings_id_fk",
          "tableFrom": "job_listing_jobs",
          "tableTo": "job_listings",
          "schemaTo": "public",
          "columnsFrom": [
            "job_listing_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can view job listing jobs for their listings": {
          "name": "Users can view job listing jobs for their listings",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM job_listings jl\n  WHERE ((jl.id = job_listing_jobs.job_listing_id) AND (jl.user_id = auth.uid()))))"
        },
        "Users can add jobs to their listings": {
          "name": "Users can add jobs to their listings",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update jobs in their listings": {
          "name": "Users can update jobs in their listings",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can remove jobs from their listings": {
          "name": "Users can remove jobs from their listings",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN (0)::numeric\n    ELSE round((subtotal * tax_rate), 2)\nEND",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN subtotal\n    ELSE round((subtotal * ((1)::numeric + tax_rate)), 2)\nEND",
            "type": "stored"
          }
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "invoices_client_id_idx": {
          "name": "invoices_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_status_idx": {
          "name": "invoices_status_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_user_id_idx": {
          "name": "invoices_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_client_id_fkey": {
          "name": "invoices_client_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoices_enterprise_id_enterprises_id_fk": {
          "name": "invoices_enterprise_id_enterprises_id_fk",
          "tableFrom": "invoices",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "invoices_status_check": {
          "name": "invoices_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'sent'::text, 'paid'::text, 'overdue'::text, 'cancelled'::text])"
        }
      },
      "policies": {
        "Users can read their own invoices": {
          "name": "Users can read their own invoices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own invoices": {
          "name": "Users can insert their own invoices",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own invoices": {
          "name": "Users can update their own invoices",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own invoices": {
          "name": "Users can delete their own invoices",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.invoice_items": {
      "name": "invoice_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "invoice_items_invoice_id_idx": {
          "name": "invoice_items_invoice_id_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoice_items_invoice_id_fkey": {
          "name": "invoice_items_invoice_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "invoices",
          "schemaTo": "public",
          "columnsFrom": [
            "invoice_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoice_items_product_id_fkey": {
          "name": "invoice_items_product_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "products",
          "schemaTo": "public",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read invoice items through invoices": {
          "name": "Users can read invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM invoices i\n  WHERE ((i.id = invoice_items.invoice_id) AND (i.user_id = auth.uid()))))"
        },
        "Users can insert invoice items through invoices": {
          "name": "Users can insert invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update invoice items through invoices": {
          "name": "Users can update invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete invoice items through invoices": {
          "name": "Users can delete invoice items through invoices",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.job_listings": {
      "name": "job_listings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "job_listings_slug_idx": {
          "name": "job_listings_slug_idx",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listings_title_idx": {
          "name": "job_listings_title_idx",
          "columns": [
            {
              "expression": "title",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listings_user_id_idx": {
          "name": "job_listings_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "job_listings_enterprise_id_enterprises_id_fk": {
          "name": "job_listings_enterprise_id_enterprises_id_fk",
          "tableFrom": "job_listings",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "job_listings_slug_unique": {
          "columns": [
            "slug"
          ],
          "nullsNotDistinct": false,
          "name": "job_listings_slug_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can view their own job listings and public ones": {
          "name": "Users can view their own job listings and public ones",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((auth.uid() = user_id) OR (is_public = true))"
        },
        "Users can create job listings": {
          "name": "Users can create job listings",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own job listings": {
          "name": "Users can update their own job listings",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own job listings": {
          "name": "Users can delete their own job listings",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_settings": {
          "name": "user_settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscribed_to": {
          "name": "subscribed_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profiles_email_idx": {
          "name": "profiles_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_enterprise_id_idx": {
          "name": "profiles_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_user_id_idx": {
          "name": "profiles_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_username_idx": {
          "name": "profiles_username_idx",
          "columns": [
            {
              "expression": "username",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_enterprise_id_enterprises_id_fk": {
          "name": "profiles_enterprise_id_enterprises_id_fk",
          "tableFrom": "profiles",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(id = auth.uid())"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can create their own profile": {
          "name": "Users can create their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own profile": {
          "name": "Users can delete their own profile",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.offices": {
      "name": "offices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "offices_name_idx": {
          "name": "offices_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "offices_user_id_idx": {
          "name": "offices_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "offices_enterprise_id_enterprises_id_fk": {
          "name": "offices_enterprise_id_enterprises_id_fk",
          "tableFrom": "offices",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can delete their own offices": {
          "name": "Users can delete their own offices",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can read their own offices": {
          "name": "Users can read their own offices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Users can insert their own offices": {
          "name": "Users can insert their own offices",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own offices": {
          "name": "Users can update their own offices",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.department_locations": {
      "name": "department_locations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "department_id": {
          "name": "department_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "location_type": {
          "name": "location_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "department_locations_department_id_departments_id_fk": {
          "name": "department_locations_department_id_departments_id_fk",
          "tableFrom": "department_locations",
          "tableTo": "departments",
          "schemaTo": "public",
          "columnsFrom": [
            "department_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "department_locations_enterprise_id_enterprises_id_fk": {
          "name": "department_locations_enterprise_id_enterprises_id_fk",
          "tableFrom": "department_locations",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_department_location": {
          "columns": [
            "department_id",
            "location_type",
            "location_id"
          ],
          "nullsNotDistinct": false,
          "name": "unique_department_location"
        }
      },
      "checkConstraints": {
        "location_type_check": {
          "name": "location_type_check",
          "value": "location_type = ANY (ARRAY['office'::text, 'branch'::text, 'warehouse'::text])"
        }
      },
      "policies": {
        "Users can read department locations through departments": {
          "name": "Users can read department locations through departments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM departments d\n  WHERE ((d.id = department_locations.department_id) AND (d.user_id = auth.uid()))))"
        },
        "Users can insert department locations through departments": {
          "name": "Users can insert department locations through departments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update department locations through departments": {
          "name": "Users can update department locations through departments",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete department locations through departments": {
          "name": "Users can delete department locations through departments",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.employees": {
      "name": "employees",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "hire_date": {
          "name": "hire_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "termination_date": {
          "name": "termination_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "department_id": {
          "name": "department_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "employees_department_id_idx": {
          "name": "employees_department_id_idx",
          "columns": [
            {
              "expression": "department_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employees_email_idx": {
          "name": "employees_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employees_user_id_idx": {
          "name": "employees_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "employees_department_id_departments_id_fk": {
          "name": "employees_department_id_departments_id_fk",
          "tableFrom": "employees",
          "tableTo": "departments",
          "schemaTo": "public",
          "columnsFrom": [
            "department_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "employees_enterprise_id_enterprises_id_fk": {
          "name": "employees_enterprise_id_enterprises_id_fk",
          "tableFrom": "employees",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.expenses": {
      "name": "expenses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "expense_number": {
          "name": "expense_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "expenses_client_id_idx": {
          "name": "expenses_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "expenses_status_idx": {
          "name": "expenses_status_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "expenses_user_id_idx": {
          "name": "expenses_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "expenses_client_id_fkey": {
          "name": "expenses_client_id_fkey",
          "tableFrom": "expenses",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "expenses_enterprise_id_enterprises_id_fk": {
          "name": "expenses_enterprise_id_enterprises_id_fk",
          "tableFrom": "expenses",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "expenses_status_check": {
          "name": "expenses_status_check",
          "value": "status = ANY (ARRAY['pending'::text, 'paid'::text, 'overdue'::text])"
        }
      },
      "policies": {
        "Users can read their own expenses": {
          "name": "Users can read their own expenses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own expenses": {
          "name": "Users can insert their own expenses",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own expenses": {
          "name": "Users can update their own expenses",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own expenses": {
          "name": "Users can delete their own expenses",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.quotes": {
      "name": "quotes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "quote_number": {
          "name": "quote_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "expiry_date": {
          "name": "expiry_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN (0)::numeric\n    ELSE round((subtotal * tax_rate), 2)\nEND",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN subtotal\n    ELSE round((subtotal * ((1)::numeric + tax_rate)), 2)\nEND",
            "type": "stored"
          }
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "quotes_client_id_idx": {
          "name": "quotes_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_status_idx": {
          "name": "quotes_status_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_user_id_idx": {
          "name": "quotes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quotes_client_id_fkey": {
          "name": "quotes_client_id_fkey",
          "tableFrom": "quotes",
          "tableTo": "clients",
          "schemaTo": "public",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "quotes_enterprise_id_enterprises_id_fk": {
          "name": "quotes_enterprise_id_enterprises_id_fk",
          "tableFrom": "quotes",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "quotes_status_check": {
          "name": "quotes_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'sent'::text, 'accepted'::text, 'rejected'::text, 'expired'::text])"
        }
      },
      "policies": {
        "Users can read their own quotes": {
          "name": "Users can read their own quotes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own quotes": {
          "name": "Users can insert their own quotes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own quotes": {
          "name": "Users can update their own quotes",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own quotes": {
          "name": "Users can delete their own quotes",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.salaries": {
      "name": "salaries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "employee_id": {
          "name": "employee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'USD'"
        },
        "payment_frequency": {
          "name": "payment_frequency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'monthly'"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "salaries_employee_id_idx": {
          "name": "salaries_employee_id_idx",
          "columns": [
            {
              "expression": "employee_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "salaries_user_id_idx": {
          "name": "salaries_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "salaries_employee_id_fkey": {
          "name": "salaries_employee_id_fkey",
          "tableFrom": "salaries",
          "tableTo": "employees",
          "schemaTo": "public",
          "columnsFrom": [
            "employee_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "salaries_enterprise_id_enterprises_id_fk": {
          "name": "salaries_enterprise_id_enterprises_id_fk",
          "tableFrom": "salaries",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own salary records": {
          "name": "Users can read their own salary records",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own salary records": {
          "name": "Users can insert their own salary records",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own salary records": {
          "name": "Users can update their own salary records",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own salary records": {
          "name": "Users can delete their own salary records",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.vendors": {
      "name": "vendors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "vendors_email_idx": {
          "name": "vendors_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vendors_name_idx": {
          "name": "vendors_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vendors_user_id_idx": {
          "name": "vendors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "vendors_enterprise_id_enterprises_id_fk": {
          "name": "vendors_enterprise_id_enterprises_id_fk",
          "tableFrom": "vendors",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own vendors": {
          "name": "Users can read their own vendors",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own vendors": {
          "name": "Users can insert their own vendors",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own vendors": {
          "name": "Users can update their own vendors",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own vendors": {
          "name": "Users can delete their own vendors",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.departments": {
      "name": "departments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "departments_name_idx": {
          "name": "departments_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "departments_user_id_idx": {
          "name": "departments_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "departments_enterprise_id_enterprises_id_fk": {
          "name": "departments_enterprise_id_enterprises_id_fk",
          "tableFrom": "departments",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own departments": {
          "name": "Users can read their own departments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own departments": {
          "name": "Users can insert their own departments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own departments": {
          "name": "Users can update their own departments",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own departments": {
          "name": "Users can delete their own departments",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.warehouses": {
      "name": "warehouses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "capacity": {
          "name": "capacity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "warehouses_code_idx": {
          "name": "warehouses_code_idx",
          "columns": [
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "warehouses_name_idx": {
          "name": "warehouses_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "warehouses_user_id_idx": {
          "name": "warehouses_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "warehouses_enterprise_id_enterprises_id_fk": {
          "name": "warehouses_enterprise_id_enterprises_id_fk",
          "tableFrom": "warehouses",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "warehouses_code_key": {
          "columns": [
            "code"
          ],
          "nullsNotDistinct": false,
          "name": "warehouses_code_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can read their own warehouses": {
          "name": "Users can read their own warehouses",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own warehouses": {
          "name": "Users can insert their own warehouses",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own warehouses": {
          "name": "Users can update their own warehouses",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own warehouses": {
          "name": "Users can delete their own warehouses",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.jobs": {
      "name": "jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "requirements": {
          "name": "requirements",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "department": {
          "name": "department",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "salary": {
          "name": "salary",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "jobs_department_idx": {
          "name": "jobs_department_idx",
          "columns": [
            {
              "expression": "department",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "jobs_title_idx": {
          "name": "jobs_title_idx",
          "columns": [
            {
              "expression": "title",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "jobs_user_id_idx": {
          "name": "jobs_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "jobs_enterprise_id_enterprises_id_fk": {
          "name": "jobs_enterprise_id_enterprises_id_fk",
          "tableFrom": "jobs",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own jobs": {
          "name": "Users can read their own jobs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own jobs": {
          "name": "Users can insert their own jobs",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own jobs": {
          "name": "Users can update their own jobs",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own jobs": {
          "name": "Users can delete their own jobs",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.branches": {
      "name": "branches",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manager": {
          "name": "manager",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "branches_code_idx": {
          "name": "branches_code_idx",
          "columns": [
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "branches_name_idx": {
          "name": "branches_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "branches_user_id_idx": {
          "name": "branches_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "branches_enterprise_id_enterprises_id_fk": {
          "name": "branches_enterprise_id_enterprises_id_fk",
          "tableFrom": "branches",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "branches_code_key": {
          "columns": [
            "code"
          ],
          "nullsNotDistinct": false,
          "name": "branches_code_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can insert their own branches": {
          "name": "Users can insert their own branches",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid() = user_id)"
        },
        "Users can update their own branches": {
          "name": "Users can update their own branches",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own branches": {
          "name": "Users can delete their own branches",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        },
        "Users can read their own branches": {
          "name": "Users can read their own branches",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.companies": {
      "name": "companies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "companies_email_idx": {
          "name": "companies_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "companies_is_active_idx": {
          "name": "companies_is_active_idx",
          "columns": [
            {
              "expression": "is_active",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "companies_name_idx": {
          "name": "companies_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "companies_enterprise_id_enterprises_id_fk": {
          "name": "companies_enterprise_id_enterprises_id_fk",
          "tableFrom": "companies",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own companies": {
          "name": "Users can read their own companies",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own companies": {
          "name": "Users can insert their own companies",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own companies": {
          "name": "Users can update their own companies",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own companies": {
          "name": "Users can delete their own companies",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.enterprises": {
      "name": "enterprises",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "enterprises_email_idx": {
          "name": "enterprises_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "enterprises_name_idx": {
          "name": "enterprises_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can create enterprises": {
          "name": "Users can create enterprises",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Users can view enterprises": {
          "name": "Users can view enterprises",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update enterprises": {
          "name": "Users can update enterprises",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.role_permissions": {
      "name": "role_permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "permission": {
          "name": "permission",
          "type": "app_permission",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "role_permissions_role_permission_key": {
          "columns": [
            "role",
            "permission"
          ],
          "nullsNotDistinct": false,
          "name": "role_permissions_role_permission_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Only superadmins can manage role permissions": {
          "name": "Only superadmins can manage role permissions",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM user_roles ur\n  WHERE ((ur.user_id = auth.uid()) AND (ur.role = 'superadmin'::app_role))))",
          "using": "(EXISTS ( SELECT 1\n   FROM user_roles ur\n  WHERE ((ur.user_id = auth.uid()) AND (ur.role = 'superadmin'::app_role))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "app_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_roles_enterprise_id_enterprises_id_fk": {
          "name": "user_roles_enterprise_id_enterprises_id_fk",
          "tableFrom": "user_roles",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_roles_user_id_role_enterprise_id_key": {
          "columns": [
            "user_id",
            "role",
            "enterprise_id"
          ],
          "nullsNotDistinct": false,
          "name": "user_roles_user_id_role_enterprise_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can view their own roles": {
          "name": "Users can view their own roles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        },
        "Users can create initial role": {
          "name": "Users can create initial role",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Only superadmins can manage roles": {
          "name": "Only superadmins can manage roles",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.clients": {
      "name": "clients",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "clients_email_idx": {
          "name": "clients_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_name_idx": {
          "name": "clients_name_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_user_id_idx": {
          "name": "clients_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clients_company_fkey": {
          "name": "clients_company_fkey",
          "tableFrom": "clients",
          "tableTo": "companies",
          "schemaTo": "public",
          "columnsFrom": [
            "company"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "clients_enterprise_id_enterprises_id_fk": {
          "name": "clients_enterprise_id_enterprises_id_fk",
          "tableFrom": "clients",
          "tableTo": "enterprises",
          "schemaTo": "public",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read their own clients": {
          "name": "Users can read their own clients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can insert their own clients": {
          "name": "Users can insert their own clients",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update their own clients": {
          "name": "Users can update their own clients",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete their own clients": {
          "name": "Users can delete their own clients",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.quote_items": {
      "name": "quote_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "quote_id": {
          "name": "quote_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "quote_items_quote_id_idx": {
          "name": "quote_items_quote_id_idx",
          "columns": [
            {
              "expression": "quote_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quote_items_product_id_fkey": {
          "name": "quote_items_product_id_fkey",
          "tableFrom": "quote_items",
          "tableTo": "products",
          "schemaTo": "public",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "quote_items_quote_id_fkey": {
          "name": "quote_items_quote_id_fkey",
          "tableFrom": "quote_items",
          "tableTo": "quotes",
          "schemaTo": "public",
          "columnsFrom": [
            "quote_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can read quote items through quotes": {
          "name": "Users can read quote items through quotes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM quotes q\n  WHERE ((q.id = quote_items.quote_id) AND (q.user_id = auth.uid()))))"
        },
        "Users can insert quote items through quotes": {
          "name": "Users can insert quote items through quotes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can update quote items through quotes": {
          "name": "Users can update quote items through quotes",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can delete quote items through quotes": {
          "name": "Users can delete quote items through quotes",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.app_permission": {
      "name": "app_permission",
      "values": [
        "profiles.create",
        "profiles.read",
        "profiles.update",
        "profiles.delete",
        "profiles.export",
        "enterprises.create",
        "enterprises.read",
        "enterprises.update",
        "enterprises.delete",
        "enterprises.export",
        "invoices.create",
        "invoices.read",
        "invoices.update",
        "invoices.delete",
        "invoices.export",
        "invoices.duplicate",
        "products.create",
        "products.read",
        "products.update",
        "products.delete",
        "products.export",
        "quotes.create",
        "quotes.read",
        "quotes.update",
        "quotes.delete",
        "quotes.export",
        "quotes.duplicate",
        "employees.create",
        "employees.read",
        "employees.update",
        "employees.delete",
        "employees.export",
        "salaries.create",
        "salaries.read",
        "salaries.update",
        "salaries.delete",
        "salaries.export",
        "documents.create",
        "documents.read",
        "documents.update",
        "documents.delete",
        "documents.export",
        "templates.create",
        "templates.read",
        "templates.update",
        "templates.delete",
        "templates.export",
        "templates.duplicate",
        "employee_requests.create",
        "employee_requests.read",
        "employee_requests.update",
        "employee_requests.delete",
        "employee_requests.export",
        "job_listings.create",
        "job_listings.read",
        "job_listings.update",
        "job_listings.delete",
        "job_listings.export",
        "offices.create",
        "offices.read",
        "offices.update",
        "offices.delete",
        "offices.export",
        "expenses.create",
        "expenses.read",
        "expenses.update",
        "expenses.delete",
        "expenses.export",
        "expenses.duplicate",
        "departments.create",
        "departments.read",
        "departments.update",
        "departments.delete",
        "departments.export",
        "warehouses.create",
        "warehouses.read",
        "warehouses.update",
        "warehouses.delete",
        "warehouses.export",
        "vendors.create",
        "vendors.read",
        "vendors.update",
        "vendors.delete",
        "vendors.export",
        "clients.create",
        "clients.read",
        "clients.update",
        "clients.delete",
        "clients.export",
        "companies.create",
        "companies.read",
        "companies.update",
        "companies.delete",
        "companies.export",
        "branches.create",
        "branches.read",
        "branches.update",
        "branches.delete",
        "branches.export"
      ],
      "schema": "public"
    },
    "public.app_role": {
      "name": "app_role",
      "values": [
        "superadmin",
        "admin",
        "accounting",
        "hr"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}