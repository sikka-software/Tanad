{
  "id": "bb6cfd93-b6fc-416b-91ee-5f0f819ed0fb",
  "prevId": "5ccf30d1-45d5-4815-9b14-9c716996aa1f",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.activity_logs": {
      "name": "activity_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "action_type": {
          "name": "action_type",
          "type": "activity_log_action_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "target_type": {
          "name": "target_type",
          "type": "activity_target_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_name": {
          "name": "target_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "activity_logs_branch_action_idx": {
          "name": "activity_logs_branch_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'BRANCH'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_branch_created_at_idx": {
          "name": "activity_logs_branch_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'BRANCH'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_cars_action_idx": {
          "name": "activity_logs_cars_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'CAR'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_cars_created_at_idx": {
          "name": "activity_logs_cars_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'CAR'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_client_action_idx": {
          "name": "activity_logs_client_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'CLIENT'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_client_created_at_idx": {
          "name": "activity_logs_client_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'CLIENT'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_domain_action_idx": {
          "name": "activity_logs_domain_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'DOMAIN'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_domain_created_at_idx": {
          "name": "activity_logs_domain_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'DOMAIN'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_employee_action_idx": {
          "name": "activity_logs_employee_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EMPLOYEE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_employee_created_at_idx": {
          "name": "activity_logs_employee_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EMPLOYEE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_employee_request_action_idx": {
          "name": "activity_logs_employee_request_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EMPLOYEE_REQUEST'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_employee_request_created_at_idx": {
          "name": "activity_logs_employee_request_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EMPLOYEE_REQUEST'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_enterprise_idx": {
          "name": "activity_logs_enterprise_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_expense_action_idx": {
          "name": "activity_logs_expense_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EXPENSE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_expense_created_at_idx": {
          "name": "activity_logs_expense_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'EXPENSE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_invoice_action_idx": {
          "name": "activity_logs_invoice_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'INVOICE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_invoice_created_at_idx": {
          "name": "activity_logs_invoice_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'INVOICE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_job_action_idx": {
          "name": "activity_logs_job_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'JOB'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_job_created_at_idx": {
          "name": "activity_logs_job_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'JOB'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_job_listing_action_idx": {
          "name": "activity_logs_job_listing_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'JOB_LISTING'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_job_listing_created_at_idx": {
          "name": "activity_logs_job_listing_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'JOB_LISTING'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_office_action_idx": {
          "name": "activity_logs_office_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'OFFICE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_office_created_at_idx": {
          "name": "activity_logs_office_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'OFFICE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_online_stores_action_idx": {
          "name": "activity_logs_online_stores_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'ONLINE_STORE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_online_stores_created_at_idx": {
          "name": "activity_logs_online_stores_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'ONLINE_STORE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_product_action_idx": {
          "name": "activity_logs_product_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'PRODUCT'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_product_created_at_idx": {
          "name": "activity_logs_product_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'PRODUCT'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_purchases_action_idx": {
          "name": "activity_logs_purchases_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'PURCHASE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_purchases_created_at_idx": {
          "name": "activity_logs_purchases_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'PURCHASE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_server_action_idx": {
          "name": "activity_logs_server_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'SERVER'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_server_created_at_idx": {
          "name": "activity_logs_server_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'SERVER'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_target_idx": {
          "name": "activity_logs_target_idx",
          "columns": [
            {
              "expression": "target_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            },
            {
              "expression": "target_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_user_idx": {
          "name": "activity_logs_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_warehouse_action_idx": {
          "name": "activity_logs_warehouse_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WAREHOUSE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_warehouse_created_at_idx": {
          "name": "activity_logs_warehouse_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WAREHOUSE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_website_action_idx": {
          "name": "activity_logs_website_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WEBSITE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_website_created_at_idx": {
          "name": "activity_logs_website_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WEBSITE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_websites_action_idx": {
          "name": "activity_logs_websites_action_idx",
          "columns": [
            {
              "expression": "action_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WEBSITE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "activity_logs_websites_created_at_idx": {
          "name": "activity_logs_websites_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(target_type = 'WEBSITE'::activity_target_type)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "activity_logs_enterprise_id_enterprises_id_fk": {
          "name": "activity_logs_enterprise_id_enterprises_id_fk",
          "tableFrom": "activity_logs",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "activity_logs_user_id_users_id_fk": {
          "name": "activity_logs_user_id_users_id_fk",
          "tableFrom": "activity_logs",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "activity_logs_id_created_at_pk": {
          "name": "activity_logs_id_created_at_pk",
          "columns": [
            "id",
            "created_at"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.audit_log_entries": {
      "name": "audit_log_entries",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        }
      },
      "indexes": {
        "audit_logs_instance_id_idx": {
          "name": "audit_logs_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.bank_accounts": {
      "name": "bank_accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "account_number": {
          "name": "account_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "account_type": {
          "name": "account_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "routing_number": {
          "name": "routing_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "iban": {
          "name": "iban",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "swift_bic": {
          "name": "swift_bic",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bank_name": {
          "name": "bank_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "bank_accounts_enterprise_id_idx": {
          "name": "bank_accounts_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "bank_accounts_user_id_idx": {
          "name": "bank_accounts_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "bank_accounts_enterprise_id_enterprises_id_fk": {
          "name": "bank_accounts_enterprise_id_enterprises_id_fk",
          "tableFrom": "bank_accounts",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "bank_accounts_user_id_users_id_fk": {
          "name": "bank_accounts_user_id_users_id_fk",
          "tableFrom": "bank_accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "bank_accounts_enterprise_id_name_unique": {
          "name": "bank_accounts_enterprise_id_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name",
            "enterprise_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.branches": {
      "name": "branches",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manager": {
          "name": "manager",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "area": {
          "name": "area",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "branches_code_idx": {
          "name": "branches_code_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "branches_name_idx": {
          "name": "branches_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "branches_user_id_idx": {
          "name": "branches_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_branches_enterprise_id": {
          "name": "idx_branches_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_branches_manager": {
          "name": "idx_branches_manager",
          "columns": [
            {
              "expression": "manager",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fk_branch_manager": {
          "name": "fk_branch_manager",
          "tableFrom": "branches",
          "tableTo": "employees",
          "columnsFrom": [
            "manager"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "branches_code_key": {
          "name": "branches_code_key",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cars": {
      "name": "cars",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "make": {
          "name": "make",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "year": {
          "name": "year",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vin": {
          "name": "vin",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_country": {
          "name": "license_country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_plate": {
          "name": "license_plate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownership_status": {
          "name": "ownership_status",
          "type": "vehicle_ownership_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'owned'"
        },
        "status": {
          "name": "status",
          "type": "vehicle_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "daily_payment": {
          "name": "daily_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "weekly_payment": {
          "name": "weekly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "monthly_payment": {
          "name": "monthly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "annual_payment": {
          "name": "annual_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_cycle": {
          "name": "payment_cycle",
          "type": "payment_cycle",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_date": {
          "name": "purchase_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_price": {
          "name": "purchase_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "cars_enterprise_id_idx": {
          "name": "cars_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "cars_name_idx": {
          "name": "cars_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "cars_user_id_idx": {
          "name": "cars_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "cars_enterprise_id_enterprises_id_fk": {
          "name": "cars_enterprise_id_enterprises_id_fk",
          "tableFrom": "cars",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "cars_user_id_users_id_fk": {
          "name": "cars_user_id_users_id_fk",
          "tableFrom": "cars",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.clients": {
      "name": "clients",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "clients_email_idx": {
          "name": "clients_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_name_idx": {
          "name": "clients_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "clients_user_id_idx": {
          "name": "clients_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_clients_enterprise_id": {
          "name": "idx_clients_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clients_company_fkey": {
          "name": "clients_company_fkey",
          "tableFrom": "clients",
          "tableTo": "companies",
          "columnsFrom": [
            "company"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.companies": {
      "name": "companies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vat_number": {
          "name": "vat_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "companies_email_idx": {
          "name": "companies_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "companies_is_active_idx": {
          "name": "companies_is_active_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "companies_name_idx": {
          "name": "companies_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_companies_enterprise_id": {
          "name": "idx_companies_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.department_locations": {
      "name": "department_locations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "department_id": {
          "name": "department_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "location_type": {
          "name": "location_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "department_locations_department_id_departments_id_fk": {
          "name": "department_locations_department_id_departments_id_fk",
          "tableFrom": "department_locations",
          "tableTo": "departments",
          "columnsFrom": [
            "department_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_department_location": {
          "name": "unique_department_location",
          "nullsNotDistinct": false,
          "columns": [
            "department_id",
            "location_type",
            "location_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "location_type_check": {
          "name": "location_type_check",
          "value": "location_type = ANY (ARRAY['office'::text, 'branch'::text, 'warehouse'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.departments": {
      "name": "departments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "departments_name_idx": {
          "name": "departments_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "departments_user_id_idx": {
          "name": "departments_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_departments_enterprise_id": {
          "name": "idx_departments_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.documents": {
      "name": "documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_type": {
          "name": "entity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "documents_entity_id_idx": {
          "name": "documents_entity_id_idx",
          "columns": [
            {
              "expression": "entity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "documents_entity_type_idx": {
          "name": "documents_entity_type_idx",
          "columns": [
            {
              "expression": "entity_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "documents_user_id_idx": {
          "name": "documents_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.domains": {
      "name": "domains",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "domain_name": {
          "name": "domain_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "registrar": {
          "name": "registrar",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "monthly_payment": {
          "name": "monthly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "annual_payment": {
          "name": "annual_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_cycle": {
          "name": "payment_cycle",
          "type": "payment_cycle",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        }
      },
      "indexes": {
        "domains_domain_name_idx": {
          "name": "domains_domain_name_idx",
          "columns": [
            {
              "expression": "domain_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "domains_enterprise_id_idx": {
          "name": "domains_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "domains_user_id_idx": {
          "name": "domains_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "domains_enterprise_id_enterprises_id_fk": {
          "name": "domains_enterprise_id_enterprises_id_fk",
          "tableFrom": "domains",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "domains_user_id_users_id_fk": {
          "name": "domains_user_id_users_id_fk",
          "tableFrom": "domains",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "domains_enterprise_id_domain_name_unique": {
          "name": "domains_enterprise_id_domain_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "domain_name",
            "enterprise_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.employee_requests": {
      "name": "employee_requests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "employee_id": {
          "name": "employee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "employee_request_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "attachments": {
          "name": "attachments",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "employee_requests_created_at_idx": {
          "name": "employee_requests_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_employee_id_idx": {
          "name": "employee_requests_employee_id_idx",
          "columns": [
            {
              "expression": "employee_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_status_idx": {
          "name": "employee_requests_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_type_idx": {
          "name": "employee_requests_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employee_requests_user_id_idx": {
          "name": "employee_requests_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "employee_requests_employee_id_employees_id_fk": {
          "name": "employee_requests_employee_id_employees_id_fk",
          "tableFrom": "employee_requests",
          "tableTo": "employees",
          "columnsFrom": [
            "employee_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow enterprise members to update requests": {
          "name": "Allow enterprise members to update requests",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "is_member_of_enterprise(enterprise_id)",
          "withCheck": "is_member_of_enterprise(enterprise_id)"
        },
        "Allow members to view own enterprise requests": {
          "name": "Allow members to view own enterprise requests",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Allow members to insert for own enterprise": {
          "name": "Allow members to insert for own enterprise",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Allow creator to delete own requests": {
          "name": "Allow creator to delete own requests",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.employees": {
      "name": "employees",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "hire_date": {
          "name": "hire_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "termination_date": {
          "name": "termination_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "job_id": {
          "name": "job_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "salary": {
          "name": "salary",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "gender": {
          "name": "gender",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'male'"
        },
        "marital_status": {
          "name": "marital_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'single'"
        },
        "education_level": {
          "name": "education_level",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "employee_number": {
          "name": "employee_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "onboarding_status": {
          "name": "onboarding_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "offboarding_status": {
          "name": "offboarding_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "status": {
          "name": "status",
          "type": "employee_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "nationality": {
          "name": "nationality",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "birth_date": {
          "name": "birth_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "national_id": {
          "name": "national_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "eqama_id": {
          "name": "eqama_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emergency_contact": {
          "name": "emergency_contact",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "employees_email_idx": {
          "name": "employees_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employees_job_id_idx": {
          "name": "employees_job_id_idx",
          "columns": [
            {
              "expression": "job_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "employees_user_id_idx": {
          "name": "employees_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_employees_enterprise_id": {
          "name": "idx_employees_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "employees_job_id_jobs_id_fk": {
          "name": "employees_job_id_jobs_id_fk",
          "tableFrom": "employees",
          "tableTo": "jobs",
          "columnsFrom": [
            "job_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.enterprises": {
      "name": "enterprises",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "founded": {
          "name": "founded",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "size": {
          "name": "size",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo": {
          "name": "logo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "enterprises_email_idx": {
          "name": "enterprises_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "enterprises_name_idx": {
          "name": "enterprises_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Access if member": {
          "name": "Access if member",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM memberships\n  WHERE ((memberships.enterprise_id = enterprises.id) AND (memberships.profile_id = auth.uid()))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.expenses": {
      "name": "expenses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "incurred_at": {
          "name": "incurred_at",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "expense_number": {
          "name": "expense_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "expense_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "expenses_created_by_fkey": {
          "name": "expenses_created_by_fkey",
          "tableFrom": "expenses",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "expenses_enterprise_id_fkey": {
          "name": "expenses_enterprise_id_fkey",
          "tableFrom": "expenses",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.flow_state": {
      "name": "flow_state",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "auth_code": {
          "name": "auth_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge_method": {
          "name": "code_challenge_method",
          "type": "code_challenge_method",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge": {
          "name": "code_challenge",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_type": {
          "name": "provider_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_access_token": {
          "name": "provider_access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_refresh_token": {
          "name": "provider_refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "auth_code_issued_at": {
          "name": "auth_code_issued_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "flow_state_created_at_idx": {
          "name": "flow_state_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_auth_code": {
          "name": "idx_auth_code",
          "columns": [
            {
              "expression": "auth_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_id_auth_method": {
          "name": "idx_user_id_auth_method",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "authentication_method",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.identities": {
      "name": "identities",
      "schema": "auth",
      "columns": {
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "identity_data": {
          "name": "identity_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "lower((identity_data ->> 'email'::text))",
            "type": "stored"
          }
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {
        "identities_email_idx": {
          "name": "identities_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "identities_user_id_idx": {
          "name": "identities_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "identities_user_id_fkey": {
          "name": "identities_user_id_fkey",
          "tableFrom": "identities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "identities_provider_id_provider_unique": {
          "name": "identities_provider_id_provider_unique",
          "nullsNotDistinct": false,
          "columns": [
            "provider_id",
            "provider"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.instances": {
      "name": "instances",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "raw_base_config": {
          "name": "raw_base_config",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoice_items": {
      "name": "invoice_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "invoice_items_invoice_id_idx": {
          "name": "invoice_items_invoice_id_idx",
          "columns": [
            {
              "expression": "invoice_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoice_items_product_id_fkey": {
          "name": "invoice_items_product_id_fkey",
          "tableFrom": "invoice_items",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.invoices": {
      "name": "invoices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_number": {
          "name": "invoice_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "invoice_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN (0)::numeric\n    ELSE round((subtotal * tax_rate), 2)\nEND",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN subtotal\n    ELSE round((subtotal * ((1)::numeric + tax_rate)), 2)\nEND",
            "type": "stored"
          }
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_invoices_enterprise_id": {
          "name": "idx_invoices_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_client_id_idx": {
          "name": "invoices_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_invoice_number_idx": {
          "name": "invoices_invoice_number_idx",
          "columns": [
            {
              "expression": "invoice_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "invoices_status_idx": {
          "name": "invoices_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "invoices_client_id_fkey": {
          "name": "invoices_client_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "clients",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoices_created_by_fkey": {
          "name": "invoices_created_by_fkey",
          "tableFrom": "invoices",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "invoices_enterprise_id_fkey": {
          "name": "invoices_enterprise_id_fkey",
          "tableFrom": "invoices",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.job_listing_jobs": {
      "name": "job_listing_jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "job_listing_id": {
          "name": "job_listing_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "job_id": {
          "name": "job_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "job_listing_jobs_job_id_idx": {
          "name": "job_listing_jobs_job_id_idx",
          "columns": [
            {
              "expression": "job_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listing_jobs_job_listing_id_idx": {
          "name": "job_listing_jobs_job_listing_id_idx",
          "columns": [
            {
              "expression": "job_listing_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "job_listing_jobs_job_id_jobs_id_fk": {
          "name": "job_listing_jobs_job_id_jobs_id_fk",
          "tableFrom": "job_listing_jobs",
          "tableTo": "jobs",
          "columnsFrom": [
            "job_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "job_listing_jobs_job_listing_id_job_listings_id_fk": {
          "name": "job_listing_jobs_job_listing_id_job_listings_id_fk",
          "tableFrom": "job_listing_jobs",
          "tableTo": "job_listings",
          "columnsFrom": [
            "job_listing_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.job_listings": {
      "name": "job_listings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "slug": {
          "name": "slug",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "locations": {
          "name": "locations",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "departments": {
          "name": "departments",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "enable_search_filtering": {
          "name": "enable_search_filtering",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {
        "job_listings_slug_idx": {
          "name": "job_listings_slug_idx",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listings_title_idx": {
          "name": "job_listings_title_idx",
          "columns": [
            {
              "expression": "title",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "job_listings_user_id_idx": {
          "name": "job_listings_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "job_listings_slug_unique": {
          "name": "job_listings_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.jobs": {
      "name": "jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "requirements": {
          "name": "requirements",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "department": {
          "name": "department",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "salary": {
          "name": "salary",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "responsibilities": {
          "name": "responsibilities",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "benefits": {
          "name": "benefits",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "total_positions": {
          "name": "total_positions",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "occupied_positions": {
          "name": "occupied_positions",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        }
      },
      "indexes": {
        "idx_jobs_enterprise_id": {
          "name": "idx_jobs_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "jobs_department_idx": {
          "name": "jobs_department_idx",
          "columns": [
            {
              "expression": "department",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "jobs_title_idx": {
          "name": "jobs_title_idx",
          "columns": [
            {
              "expression": "title",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "jobs_user_id_idx": {
          "name": "jobs_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.memberships": {
      "name": "memberships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_memberships_role_id": {
          "name": "idx_memberships_role_id",
          "columns": [
            {
              "expression": "role_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "memberships_enterprise_id_fkey": {
          "name": "memberships_enterprise_id_fkey",
          "tableFrom": "memberships",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memberships_profile_id_fkey": {
          "name": "memberships_profile_id_fkey",
          "tableFrom": "memberships",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "memberships_role_id_fkey": {
          "name": "memberships_role_id_fkey",
          "tableFrom": "memberships",
          "tableTo": "roles",
          "columnsFrom": [
            "role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "memberships_profile_id_enterprise_id_key": {
          "name": "memberships_profile_id_enterprise_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "profile_id",
            "enterprise_id"
          ]
        }
      },
      "policies": {
        "Access if same user": {
          "name": "Access if same user",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(profile_id = auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_amr_claims": {
      "name": "mfa_amr_claims",
      "schema": "auth",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mfa_amr_claims_session_id_fkey": {
          "name": "mfa_amr_claims_session_id_fkey",
          "tableFrom": "mfa_amr_claims",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_amr_claims_session_id_authentication_method_pkey": {
          "name": "mfa_amr_claims_session_id_authentication_method_pkey",
          "nullsNotDistinct": false,
          "columns": [
            "session_id",
            "authentication_method"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_challenges": {
      "name": "mfa_challenges",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": true
        },
        "otp_code": {
          "name": "otp_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_session_data": {
          "name": "web_authn_session_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "mfa_challenge_created_at_idx": {
          "name": "mfa_challenge_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_challenges_auth_factor_id_fkey": {
          "name": "mfa_challenges_auth_factor_id_fkey",
          "tableFrom": "mfa_challenges",
          "tableTo": "mfa_factors",
          "schemaTo": "auth",
          "columnsFrom": [
            "factor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_factors": {
      "name": "mfa_factors",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "friendly_name": {
          "name": "friendly_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "factor_type": {
          "name": "factor_type",
          "type": "factor_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "factor_status",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_challenged_at": {
          "name": "last_challenged_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_credential": {
          "name": "web_authn_credential",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_aaguid": {
          "name": "web_authn_aaguid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "factor_id_created_at_idx": {
          "name": "factor_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_friendly_name_unique": {
          "name": "mfa_factors_user_friendly_name_unique",
          "columns": [
            {
              "expression": "friendly_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "where": "(TRIM(BOTH FROM friendly_name) <> ''::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_id_idx": {
          "name": "mfa_factors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unique_phone_factor_per_user": {
          "name": "unique_phone_factor_per_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "phone",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_factors_user_id_fkey": {
          "name": "mfa_factors_user_id_fkey",
          "tableFrom": "mfa_factors",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_factors_last_challenged_at_key": {
          "name": "mfa_factors_last_challenged_at_key",
          "nullsNotDistinct": false,
          "columns": [
            "last_challenged_at"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.offices": {
      "name": "offices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "capacity": {
          "name": "capacity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "working_hours": {
          "name": "working_hours",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "area": {
          "name": "area",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manager": {
          "name": "manager",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_offices_enterprise_id": {
          "name": "idx_offices_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_offices_manager": {
          "name": "idx_offices_manager",
          "columns": [
            {
              "expression": "manager",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "offices_name_idx": {
          "name": "offices_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "offices_user_id_idx": {
          "name": "offices_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fk_office_manager": {
          "name": "fk_office_manager",
          "tableFrom": "offices",
          "tableTo": "employees",
          "columnsFrom": [
            "manager"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.one_time_tokens": {
      "name": "one_time_tokens",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_type": {
          "name": "token_type",
          "type": "one_time_token_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "relates_to": {
          "name": "relates_to",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "one_time_tokens_relates_to_hash_idx": {
          "name": "one_time_tokens_relates_to_hash_idx",
          "columns": [
            {
              "expression": "relates_to",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_token_hash_hash_idx": {
          "name": "one_time_tokens_token_hash_hash_idx",
          "columns": [
            {
              "expression": "token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_user_id_token_type_key": {
          "name": "one_time_tokens_user_id_token_type_key",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "token_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "one_time_tokens_user_id_fkey": {
          "name": "one_time_tokens_user_id_fkey",
          "tableFrom": "one_time_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "one_time_tokens_token_hash_check": {
          "name": "one_time_tokens_token_hash_check",
          "value": "char_length(token_hash) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.online_stores": {
      "name": "online_stores",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "domain_name": {
          "name": "domain_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "platform": {
          "name": "platform",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "online_stores_domain_name_idx": {
          "name": "online_stores_domain_name_idx",
          "columns": [
            {
              "expression": "domain_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "online_stores_enterprise_id_idx": {
          "name": "online_stores_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "online_stores_user_id_idx": {
          "name": "online_stores_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "online_stores_enterprise_id_enterprises_id_fk": {
          "name": "online_stores_enterprise_id_enterprises_id_fk",
          "tableFrom": "online_stores",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "online_stores_user_id_users_id_fk": {
          "name": "online_stores_user_id_users_id_fk",
          "tableFrom": "online_stores",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "online_stores_enterprise_id_domain_name_unique": {
          "name": "online_stores_enterprise_id_domain_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "domain_name",
            "enterprise_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.permissions": {
      "name": "permissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "permission": {
          "name": "permission",
          "type": "app_permission",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "permissions_role_id_fkey": {
          "name": "permissions_role_id_fkey",
          "tableFrom": "permissions",
          "tableTo": "roles",
          "columnsFrom": [
            "role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "permissions_role_id_permission_key": {
          "name": "permissions_role_id_permission_key",
          "nullsNotDistinct": false,
          "columns": [
            "role_id",
            "permission"
          ]
        }
      },
      "policies": {
        "Users can view permissions in their enterprise": {
          "name": "Users can view permissions in their enterprise",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(role_id IN ( SELECT roles.id\n   FROM roles\n  WHERE ((roles.enterprise_id IN ( SELECT user_enterprises.enterprise_id\n           FROM user_enterprises\n          WHERE (user_enterprises.user_id = auth.uid()))) OR (roles.is_system = true))))"
        },
        "Users can manage permissions in their enterprise": {
          "name": "Users can manage permissions in their enterprise",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.products": {
      "name": "products",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "sku": {
          "name": "sku",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "stock_quantity": {
          "name": "stock_quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "unit": {
          "name": "unit",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_products_enterprise_id": {
          "name": "idx_products_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_name_idx": {
          "name": "products_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_sku_idx": {
          "name": "products_sku_idx",
          "columns": [
            {
              "expression": "sku",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "products_user_id_idx": {
          "name": "products_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "user_settings": {
          "name": "user_settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscribed_to": {
          "name": "subscribed_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price_id": {
          "name": "price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancel_at_period_end": {
          "name": "cancel_at_period_end",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "cancel_at": {
          "name": "cancel_at",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profiles_email_idx": {
          "name": "profiles_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_enterprise_id_idx": {
          "name": "profiles_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_user_id_idx": {
          "name": "profiles_user_id_idx",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_username_idx": {
          "name": "profiles_username_idx",
          "columns": [
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_id_fkey": {
          "name": "profiles_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_email_key": {
          "name": "profiles_email_key",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Users can view own profile": {
          "name": "Users can view own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = id)"
        },
        "Users can insert own profile": {
          "name": "Users can insert own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can update own profile": {
          "name": "Users can update own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.purchases": {
      "name": "purchases",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "incurred_at": {
          "name": "incurred_at",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_number": {
          "name": "purchase_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "purchase_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "purchases_created_by_fkey": {
          "name": "purchases_created_by_fkey",
          "tableFrom": "purchases",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "purchases_enterprise_id_fkey": {
          "name": "purchases_enterprise_id_fkey",
          "tableFrom": "purchases",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quote_items": {
      "name": "quote_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'1'"
        },
        "unit_price": {
          "name": "unit_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "(quantity * unit_price)",
            "type": "stored"
          }
        },
        "quote_id": {
          "name": "quote_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "quote_items_quote_id_idx": {
          "name": "quote_items_quote_id_idx",
          "columns": [
            {
              "expression": "quote_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quote_items_product_id_fkey": {
          "name": "quote_items_product_id_fkey",
          "tableFrom": "quote_items",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "quote_items_quote_id_fkey": {
          "name": "quote_items_quote_id_fkey",
          "tableFrom": "quote_items",
          "tableTo": "quotes",
          "columnsFrom": [
            "quote_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quotes": {
      "name": "quotes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "quote_number": {
          "name": "quote_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "issue_date": {
          "name": "issue_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "expiry_date": {
          "name": "expiry_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "quote_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "subtotal": {
          "name": "subtotal",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "tax_rate": {
          "name": "tax_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "client_id": {
          "name": "client_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tax_amount": {
          "name": "tax_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN (0)::numeric\n    ELSE round((subtotal * tax_rate), 2)\nEND",
            "type": "stored"
          }
        },
        "total": {
          "name": "total",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (tax_rate IS NULL) THEN subtotal\n    ELSE round((subtotal * ((1)::numeric + tax_rate)), 2)\nEND",
            "type": "stored"
          }
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "quotes_client_id_idx": {
          "name": "quotes_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_status_idx": {
          "name": "quotes_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "quotes_user_id_idx": {
          "name": "quotes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "quotes_client_id_fkey": {
          "name": "quotes_client_id_fkey",
          "tableFrom": "quotes",
          "tableTo": "clients",
          "columnsFrom": [
            "client_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "quotes_created_by_fkey": {
          "name": "quotes_created_by_fkey",
          "tableFrom": "quotes",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "parent": {
          "name": "parent",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "refresh_tokens_instance_id_idx": {
          "name": "refresh_tokens_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_instance_id_user_id_idx": {
          "name": "refresh_tokens_instance_id_user_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_parent_idx": {
          "name": "refresh_tokens_parent_idx",
          "columns": [
            {
              "expression": "parent",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_session_id_revoked_idx": {
          "name": "refresh_tokens_session_id_revoked_idx",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            },
            {
              "expression": "revoked",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_updated_at_idx": {
          "name": "refresh_tokens_updated_at_idx",
          "columns": [
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_session_id_fkey": {
          "name": "refresh_tokens_session_id_fkey",
          "tableFrom": "refresh_tokens",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "refresh_tokens_token_unique": {
          "name": "refresh_tokens_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.roles": {
      "name": "roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_system": {
          "name": "is_system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "roles_enterprise_id_fkey": {
          "name": "roles_enterprise_id_fkey",
          "tableFrom": "roles",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "roles_name_enterprise_id_key": {
          "name": "roles_name_enterprise_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "name",
            "enterprise_id"
          ]
        }
      },
      "policies": {
        "Users can view roles in their enterprise": {
          "name": "Users can view roles in their enterprise",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "((enterprise_id IN ( SELECT user_enterprises.enterprise_id\n   FROM user_enterprises\n  WHERE (user_enterprises.user_id = auth.uid()))) OR (is_system = true))"
        },
        "Users can create roles in their enterprise": {
          "name": "Users can create roles in their enterprise",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can update roles in their enterprise": {
          "name": "Users can update roles in their enterprise",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can delete roles in their enterprise": {
          "name": "Users can delete roles in their enterprise",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.salaries": {
      "name": "salaries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "employee_id": {
          "name": "employee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'USD'"
        },
        "payment_frequency": {
          "name": "payment_frequency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'monthly'"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "deductions": {
          "name": "deductions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "payment_date": {
          "name": "payment_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        }
      },
      "indexes": {
        "salaries_employee_id_idx": {
          "name": "salaries_employee_id_idx",
          "columns": [
            {
              "expression": "employee_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "salaries_user_id_idx": {
          "name": "salaries_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "salaries_employee_id_fkey": {
          "name": "salaries_employee_id_fkey",
          "tableFrom": "salaries",
          "tableTo": "employees",
          "columnsFrom": [
            "employee_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.saml_providers": {
      "name": "saml_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_xml": {
          "name": "metadata_xml",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_url": {
          "name": "metadata_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "attribute_mapping": {
          "name": "attribute_mapping",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "name_id_format": {
          "name": "name_id_format",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_providers_sso_provider_id_idx": {
          "name": "saml_providers_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_providers_sso_provider_id_fkey": {
          "name": "saml_providers_sso_provider_id_fkey",
          "tableFrom": "saml_providers",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "saml_providers_entity_id_key": {
          "name": "saml_providers_entity_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "entity_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "entity_id not empty": {
          "name": "entity_id not empty",
          "value": "char_length(entity_id) > 0"
        },
        "metadata_url not empty": {
          "name": "metadata_url not empty",
          "value": "(metadata_url = NULL::text) OR (char_length(metadata_url) > 0)"
        },
        "metadata_xml not empty": {
          "name": "metadata_xml not empty",
          "value": "char_length(metadata_xml) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.saml_relay_states": {
      "name": "saml_relay_states",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "for_email": {
          "name": "for_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "redirect_to": {
          "name": "redirect_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "flow_state_id": {
          "name": "flow_state_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_relay_states_created_at_idx": {
          "name": "saml_relay_states_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_for_email_idx": {
          "name": "saml_relay_states_for_email_idx",
          "columns": [
            {
              "expression": "for_email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_sso_provider_id_idx": {
          "name": "saml_relay_states_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_relay_states_flow_state_id_fkey": {
          "name": "saml_relay_states_flow_state_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "flow_state",
          "schemaTo": "auth",
          "columnsFrom": [
            "flow_state_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "saml_relay_states_sso_provider_id_fkey": {
          "name": "saml_relay_states_sso_provider_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "request_id not empty": {
          "name": "request_id not empty",
          "value": "char_length(request_id) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.schema_migrations": {
      "name": "schema_migrations",
      "schema": "auth",
      "columns": {
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.servers": {
      "name": "servers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "os": {
          "name": "os",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "monthly_payment": {
          "name": "monthly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "annual_payment": {
          "name": "annual_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_cycle": {
          "name": "payment_cycle",
          "type": "payment_cycle",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "servers_enterprise_id_idx": {
          "name": "servers_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "servers_ip_address_idx": {
          "name": "servers_ip_address_idx",
          "columns": [
            {
              "expression": "ip_address",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "inet_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "servers_name_idx": {
          "name": "servers_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "servers_status_idx": {
          "name": "servers_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "servers_user_id_idx": {
          "name": "servers_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "servers_enterprise_id_enterprises_id_fk": {
          "name": "servers_enterprise_id_enterprises_id_fk",
          "tableFrom": "servers",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "servers_user_id_users_id_fk": {
          "name": "servers_user_id_users_id_fk",
          "tableFrom": "servers",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sessions": {
      "name": "sessions",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "aal": {
          "name": "aal",
          "type": "aal_level",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": false
        },
        "not_after": {
          "name": "not_after",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "refreshed_at": {
          "name": "refreshed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ip": {
          "name": "ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "tag": {
          "name": "tag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sessions_not_after_idx": {
          "name": "sessions_not_after_idx",
          "columns": [
            {
              "expression": "not_after",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_user_id_idx": {
          "name": "sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_created_at_idx": {
          "name": "user_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_fkey": {
          "name": "sessions_user_id_fkey",
          "tableFrom": "sessions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sso_domains": {
      "name": "sso_domains",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_domains_domain_idx": {
          "name": "sso_domains_domain_idx",
          "columns": [
            {
              "expression": "lower(domain)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sso_domains_sso_provider_id_idx": {
          "name": "sso_domains_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sso_domains_sso_provider_id_fkey": {
          "name": "sso_domains_sso_provider_id_fkey",
          "tableFrom": "sso_domains",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "domain not empty": {
          "name": "domain not empty",
          "value": "char_length(domain) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.sso_providers": {
      "name": "sso_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_providers_resource_id_idx": {
          "name": "sso_providers_resource_id_idx",
          "columns": [
            {
              "expression": "lower(resource_id)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "resource_id not empty": {
          "name": "resource_id not empty",
          "value": "(resource_id = NULL::text) OR (char_length(resource_id) > 0)"
        }
      },
      "isRLSEnabled": false
    },
    "public.subscription_reactivations": {
      "name": "subscription_reactivations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "subscription_reactivations_user_id_fkey": {
          "name": "subscription_reactivations_user_id_fkey",
          "tableFrom": "subscription_reactivations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_subscription_unique": {
          "name": "user_subscription_unique",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "subscription_id",
            "created_at"
          ]
        }
      },
      "policies": {
        "Users can view their own reactivation history": {
          "name": "Users can view their own reactivation history",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Users can add their own reactivation records": {
          "name": "Users can add their own reactivation records",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "No one can update reactivation history": {
          "name": "No one can update reactivation history",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "No one can delete reactivation history": {
          "name": "No one can delete reactivation history",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Service role can manage all reactivation records": {
          "name": "Service role can manage all reactivation records",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.templates": {
      "name": "templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "templates_name_idx": {
          "name": "templates_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "templates_type_idx": {
          "name": "templates_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "templates_user_id_idx": {
          "name": "templates_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "templates_type_check": {
          "name": "templates_type_check",
          "value": "type = ANY (ARRAY['invoice'::text, 'quote'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.trucks": {
      "name": "trucks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "make": {
          "name": "make",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "year": {
          "name": "year",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vin": {
          "name": "vin",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownership_status": {
          "name": "ownership_status",
          "type": "vehicle_ownership_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'owned'"
        },
        "status": {
          "name": "status",
          "type": "vehicle_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "daily_payment": {
          "name": "daily_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "weekly_payment": {
          "name": "weekly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "monthly_payment": {
          "name": "monthly_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "annual_payment": {
          "name": "annual_payment",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "payment_cycle": {
          "name": "payment_cycle",
          "type": "payment_cycle",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "license_country": {
          "name": "license_country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_plate": {
          "name": "license_plate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "trucks_enterprise_id_idx": {
          "name": "trucks_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "trucks_name_idx": {
          "name": "trucks_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "trucks_user_id_idx": {
          "name": "trucks_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "trucks_enterprise_id_enterprises_id_fk": {
          "name": "trucks_enterprise_id_enterprises_id_fk",
          "tableFrom": "trucks",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "trucks_user_id_users_id_fk": {
          "name": "trucks_user_id_users_id_fk",
          "tableFrom": "trucks",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_enterprise_roles": {
      "name": "user_enterprise_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_enterprise_roles_user_id_fkey": {
          "name": "user_enterprise_roles_user_id_fkey",
          "tableFrom": "user_enterprise_roles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_enterprise_roles_user_id_enterprise_id_key": {
          "name": "user_enterprise_roles_user_id_enterprise_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "enterprise_id"
          ]
        }
      },
      "policies": {
        "Enable read access for users": {
          "name": "Enable read access for users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = user_id)"
        },
        "Enable insert for authenticated users": {
          "name": "Enable insert for authenticated users",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Enable update for users": {
          "name": "Enable update for users",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Enable delete for users": {
          "name": "Enable delete for users",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {
        "user_roles_enterprise_id_idx": {
          "name": "user_roles_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_roles_role_id_idx": {
          "name": "user_roles_role_id_idx",
          "columns": [
            {
              "expression": "role_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_roles_user_id_idx": {
          "name": "user_roles_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_roles_user_id_fkey": {
          "name": "user_roles_user_id_fkey",
          "tableFrom": "user_roles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_roles_pkey": {
          "name": "user_roles_pkey",
          "columns": [
            "user_id",
            "role_id",
            "enterprise_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "aud": {
          "name": "aud",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "encrypted_password": {
          "name": "encrypted_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_confirmed_at": {
          "name": "email_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "invited_at": {
          "name": "invited_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_token": {
          "name": "confirmation_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_sent_at": {
          "name": "confirmation_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_token": {
          "name": "recovery_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_sent_at": {
          "name": "recovery_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_token_new": {
          "name": "email_change_token_new",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change": {
          "name": "email_change",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_sent_at": {
          "name": "email_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "raw_app_meta_data": {
          "name": "raw_app_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "raw_user_meta_data": {
          "name": "raw_user_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_super_admin": {
          "name": "is_super_admin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "phone_confirmed_at": {
          "name": "phone_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone_change": {
          "name": "phone_change",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone_change_token": {
          "name": "phone_change_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "phone_change_sent_at": {
          "name": "phone_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmed_at": {
          "name": "confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "LEAST(email_confirmed_at, phone_confirmed_at)",
            "type": "stored"
          }
        },
        "email_change_token_current": {
          "name": "email_change_token_current",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "email_change_confirm_status": {
          "name": "email_change_confirm_status",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "banned_until": {
          "name": "banned_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reauthentication_token": {
          "name": "reauthentication_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "reauthentication_sent_at": {
          "name": "reauthentication_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_sso_user": {
          "name": "is_sso_user",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "confirmation_token_idx": {
          "name": "confirmation_token_idx",
          "columns": [
            {
              "expression": "confirmation_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((confirmation_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_current_idx": {
          "name": "email_change_token_current_idx",
          "columns": [
            {
              "expression": "email_change_token_current",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_current)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_new_idx": {
          "name": "email_change_token_new_idx",
          "columns": [
            {
              "expression": "email_change_token_new",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_new)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "reauthentication_token_idx": {
          "name": "reauthentication_token_idx",
          "columns": [
            {
              "expression": "reauthentication_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((reauthentication_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recovery_token_idx": {
          "name": "recovery_token_idx",
          "columns": [
            {
              "expression": "recovery_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((recovery_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_partial_key": {
          "name": "users_email_partial_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "(is_sso_user = false)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_email_idx": {
          "name": "users_instance_id_email_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            },
            {
              "expression": "lower((email)::text)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_idx": {
          "name": "users_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_is_anonymous_idx": {
          "name": "users_is_anonymous_idx",
          "columns": [
            {
              "expression": "is_anonymous",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_phone_key": {
          "name": "users_phone_key",
          "nullsNotDistinct": false,
          "columns": [
            "phone"
          ]
        }
      },
      "policies": {
        "Users can view their own user data": {
          "name": "Users can view their own user data",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(auth.uid() = id)"
        }
      },
      "checkConstraints": {
        "users_email_change_confirm_status_check": {
          "name": "users_email_change_confirm_status_check",
          "value": "(email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)"
        }
      },
      "isRLSEnabled": false
    },
    "public.vendors": {
      "name": "vendors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_vendors_enterprise_id": {
          "name": "idx_vendors_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vendors_email_idx": {
          "name": "vendors_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vendors_name_idx": {
          "name": "vendors_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "vendors_user_id_idx": {
          "name": "vendors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.warehouses": {
      "name": "warehouses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "timezone('utc'::text, now())"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "capacity": {
          "name": "capacity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "manager": {
          "name": "manager",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "temperature_control": {
          "name": "temperature_control",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "operating_hours": {
          "name": "operating_hours",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "warehouse_type": {
          "name": "warehouse_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'general'"
        },
        "safety_compliance": {
          "name": "safety_compliance",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "area": {
          "name": "area",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "short_address": {
          "name": "short_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additional_number": {
          "name": "additional_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "building_number": {
          "name": "building_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "street_name": {
          "name": "street_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "region": {
          "name": "region",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_warehouses_enterprise_id": {
          "name": "idx_warehouses_enterprise_id",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_warehouses_manager": {
          "name": "idx_warehouses_manager",
          "columns": [
            {
              "expression": "manager",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "warehouses_code_idx": {
          "name": "warehouses_code_idx",
          "columns": [
            {
              "expression": "code",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "warehouses_name_idx": {
          "name": "warehouses_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "warehouses_user_id_idx": {
          "name": "warehouses_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fk_warehouse_manager": {
          "name": "fk_warehouse_manager",
          "tableFrom": "warehouses",
          "tableTo": "employees",
          "columnsFrom": [
            "manager"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "warehouses_code_key": {
          "name": "warehouses_code_key",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.websites": {
      "name": "websites",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "website_name": {
          "name": "website_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "domain_name": {
          "name": "domain_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "privacy_policy_url": {
          "name": "privacy_policy_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "terms_of_service_url": {
          "name": "terms_of_service_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "common_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        }
      },
      "indexes": {
        "websites_domain_name_idx": {
          "name": "websites_domain_name_idx",
          "columns": [
            {
              "expression": "domain_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "websites_enterprise_id_idx": {
          "name": "websites_enterprise_id_idx",
          "columns": [
            {
              "expression": "enterprise_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "websites_user_id_idx": {
          "name": "websites_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "websites_enterprise_id_enterprises_id_fk": {
          "name": "websites_enterprise_id_enterprises_id_fk",
          "tableFrom": "websites",
          "tableTo": "enterprises",
          "columnsFrom": [
            "enterprise_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "websites_user_id_users_id_fk": {
          "name": "websites_user_id_users_id_fk",
          "tableFrom": "websites",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "websites_enterprise_id_domain_name_unique": {
          "name": "websites_enterprise_id_domain_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "domain_name",
            "enterprise_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "auth.aal_level": {
      "name": "aal_level",
      "schema": "auth",
      "values": [
        "aal1",
        "aal2",
        "aal3"
      ]
    },
    "public.activity_log_action_type": {
      "name": "activity_log_action_type",
      "schema": "public",
      "values": [
        "INSERT",
        "UPDATE",
        "DELETE",
        "CREATED",
        "UPDATED",
        "DELETED"
      ]
    },
    "public.activity_log_target_type": {
      "name": "activity_log_target_type",
      "schema": "public",
      "values": [
        "ENTERPRISE",
        "USER",
        "EMPLOYEE",
        "ROLE",
        "PERMISSION",
        "INVOICE",
        "EXPENSE",
        "SETTING",
        "NOTIFICATION",
        "SYSTEM"
      ]
    },
    "public.activity_target_type": {
      "name": "activity_target_type",
      "schema": "public",
      "values": [
        "USER",
        "ROLE",
        "COMPANY",
        "CLIENT",
        "INVOICE",
        "EXPENSE",
        "QUOTE",
        "BRANCH",
        "VENDOR",
        "OFFICE",
        "WAREHOUSE",
        "PURCHASE",
        "PRODUCT",
        "EMPLOYEE",
        "DEPARTMENT",
        "SALARY",
        "SERVER",
        "JOB_LISTING",
        "APPLICANT",
        "JOB",
        "TEMPLATE",
        "DOCUMENT",
        "ENTERPRISE_SETTINGS",
        "EMPLOYEE_REQUEST",
        "DOMAIN",
        "WEBSITE",
        "ONLINE_STORE",
        "CAR",
        "TRUCK"
      ]
    },
    "public.app_permission": {
      "name": "app_permission",
      "schema": "public",
      "values": [
        "users.create",
        "users.read",
        "users.update",
        "users.delete",
        "users.export",
        "users.invite",
        "roles.create",
        "roles.read",
        "roles.update",
        "roles.delete",
        "roles.export",
        "roles.assign",
        "companies.create",
        "companies.read",
        "companies.update",
        "companies.delete",
        "companies.export",
        "companies.duplicate",
        "branches.create",
        "branches.read",
        "branches.update",
        "branches.delete",
        "branches.export",
        "branches.duplicate",
        "clients.create",
        "clients.read",
        "clients.update",
        "clients.delete",
        "clients.export",
        "clients.duplicate",
        "vendors.create",
        "vendors.read",
        "vendors.update",
        "vendors.delete",
        "vendors.export",
        "vendors.duplicate",
        "products.create",
        "products.read",
        "products.update",
        "products.delete",
        "products.export",
        "products.duplicate",
        "invoices.create",
        "invoices.read",
        "invoices.update",
        "invoices.delete",
        "invoices.export",
        "invoices.duplicate",
        "expenses.create",
        "expenses.read",
        "expenses.update",
        "expenses.delete",
        "expenses.export",
        "expenses.duplicate",
        "settings.read",
        "settings.update",
        "users.duplicate",
        "roles.duplicate",
        "jobs.read",
        "jobs.create",
        "jobs.delete",
        "jobs.update",
        "jobs.duplicate",
        "jobs.export",
        "job_listings.read",
        "job_listings.create",
        "job_listings.delete",
        "job_listings.update",
        "job_listings.duplicate",
        "job_listings.export",
        "departments.read",
        "departments.create",
        "departments.delete",
        "departments.update",
        "departments.duplicate",
        "departments.export",
        "salaries.read",
        "salaries.create",
        "salaries.delete",
        "salaries.update",
        "salaries.duplicate",
        "salaries.export",
        "offices.read",
        "offices.create",
        "offices.delete",
        "offices.update",
        "offices.duplicate",
        "offices.export",
        "warehouses.read",
        "warehouses.create",
        "warehouses.delete",
        "warehouses.update",
        "warehouses.duplicate",
        "warehouses.export",
        "employees.read",
        "employees.create",
        "employees.delete",
        "employees.update",
        "employees.duplicate",
        "employees.export",
        "employee_requests.read",
        "employee_requests.create",
        "employee_requests.delete",
        "employee_requests.update",
        "employee_requests.duplicate",
        "employee_requests.export",
        "quotes.read",
        "quotes.create",
        "quotes.delete",
        "quotes.update",
        "quotes.duplicate",
        "quotes.export",
        "activity_logs.read",
        "activity_logs.delete",
        "activity_logs.export",
        "domains.read",
        "domains.create",
        "domains.delete",
        "domains.update",
        "domains.export",
        "servers.read",
        "servers.create",
        "servers.delete",
        "servers.update",
        "servers.export",
        "servers.duplicate",
        "purchases.read",
        "purchases.create",
        "purchases.delete",
        "purchases.update",
        "purchases.export",
        "purchases.duplicate",
        "websites.read",
        "websites.create",
        "websites.delete",
        "websites.update",
        "websites.export",
        "websites.duplicate",
        "online_stores.read",
        "online_stores.create",
        "online_stores.delete",
        "online_stores.update",
        "online_stores.export",
        "online_stores.duplicate",
        "cars.read",
        "cars.create",
        "cars.delete",
        "cars.update",
        "cars.export",
        "cars.duplicate",
        "trucks.read",
        "trucks.create",
        "trucks.delete",
        "trucks.update",
        "trucks.export",
        "trucks.duplicate"
      ]
    },
    "public.app_role": {
      "name": "app_role",
      "schema": "public",
      "values": [
        "superadmin",
        "admin",
        "accounting",
        "hr"
      ]
    },
    "auth.code_challenge_method": {
      "name": "code_challenge_method",
      "schema": "auth",
      "values": [
        "s256",
        "plain"
      ]
    },
    "public.common_status": {
      "name": "common_status",
      "schema": "public",
      "values": [
        "active",
        "inactive",
        "draft",
        "archived"
      ]
    },
    "public.employee_request_status": {
      "name": "employee_request_status",
      "schema": "public",
      "values": [
        "draft",
        "submitted",
        "under_review",
        "approved",
        "rejected",
        "revoked",
        "pending_additional_info",
        "completed",
        "escalated",
        "archived"
      ]
    },
    "public.employee_status": {
      "name": "employee_status",
      "schema": "public",
      "values": [
        "active",
        "onboarding",
        "probation",
        "on_leave",
        "terminated",
        "retired",
        "suspended"
      ]
    },
    "public.expense_status": {
      "name": "expense_status",
      "schema": "public",
      "values": [
        "draft",
        "submitted",
        "under_review",
        "pending_verification",
        "approved",
        "partially_approved",
        "rejected",
        "pending_payment",
        "paid",
        "disputed",
        "audit_flagged",
        "closed",
        "archived"
      ]
    },
    "auth.factor_status": {
      "name": "factor_status",
      "schema": "auth",
      "values": [
        "unverified",
        "verified"
      ]
    },
    "auth.factor_type": {
      "name": "factor_type",
      "schema": "auth",
      "values": [
        "totp",
        "webauthn",
        "phone"
      ]
    },
    "public.invoice_status": {
      "name": "invoice_status",
      "schema": "public",
      "values": [
        "draft",
        "pending_approval",
        "sent",
        "partially_paid",
        "paid",
        "overdue",
        "disputed",
        "void",
        "scheduled",
        "payment_failed",
        "refunded",
        "written_off",
        "archived"
      ]
    },
    "auth.one_time_token_type": {
      "name": "one_time_token_type",
      "schema": "auth",
      "values": [
        "confirmation_token",
        "reauthentication_token",
        "recovery_token",
        "email_change_token_new",
        "email_change_token_current",
        "phone_change_token"
      ]
    },
    "public.payment_cycle": {
      "name": "payment_cycle",
      "schema": "public",
      "values": [
        "monthly",
        "annual",
        "daily",
        "weekly",
        "biweekly",
        "quarterly"
      ]
    },
    "public.purchase_status": {
      "name": "purchase_status",
      "schema": "public",
      "values": [
        "draft",
        "issued",
        "acknowledged",
        "partially_fulfilled",
        "fulfilled",
        "shipped",
        "delayed",
        "received",
        "invoice_matched",
        "payment_initiated",
        "closed",
        "cancelled"
      ]
    },
    "public.quote_status": {
      "name": "quote_status",
      "schema": "public",
      "values": [
        "draft",
        "sent",
        "revised",
        "under_review",
        "accepted",
        "rejected",
        "expired",
        "converted_to_invoice",
        "negotiating",
        "archived"
      ]
    },
    "public.vehicle_ownership_status": {
      "name": "vehicle_ownership_status",
      "schema": "public",
      "values": [
        "owned",
        "financed",
        "rented"
      ]
    },
    "public.vehicle_status": {
      "name": "vehicle_status",
      "schema": "public",
      "values": [
        "active",
        "maintenance",
        "sold",
        "totaled",
        "retired",
        "stored",
        "other"
      ]
    }
  },
  "schemas": {
    "auth": "auth"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.user_enterprises": {
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "SELECT DISTINCT p.id AS user_id, p.enterprise_id FROM profiles p",
      "name": "user_enterprises",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.user_permissions_view": {
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "permission_id": {
          "name": "permission_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "permission_name": {
          "name": "permission_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role_name": {
          "name": "role_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "enterprise_id": {
          "name": "enterprise_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_system": {
          "name": "is_system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "SELECT DISTINCT m.profile_id AS user_id, p.id AS permission_id, p.permission::text AS permission_name, m.role_id, r.name AS role_name, m.enterprise_id, r.is_system FROM memberships m JOIN roles r ON m.role_id = r.id JOIN permissions p ON r.id = p.role_id",
      "name": "user_permissions_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}