name: Deploy PR to Production

on:
  workflow_dispatch:
    # No inputs needed - will use the selected branch automatically

env:
  NODE_VERSION: "21.x"
  ADMIN_PORTAL_DEPLOY_WEBHOOK: https://a01.sikka.io/api/v1/deploy?uuid=oogggwg80w48ssw8ccg4o0wo&force=true

jobs:
  deploy-pr:
    name: "Deploy PR to Production"
    runs-on: [self-hosted, linux, x64, A02]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          # Uses the branch selected in GitHub UI
          ref: ${{ github.ref_name }}

      - name: Extract PR number or generate tag
        id: extract-info
        run: |
          # Try to extract PR number from branch name (common pattern like feature/123-description)
          PR_NUM=$(echo "${{ github.ref_name }}" | grep -oE '[0-9]+' | head -1)

          if [ -n "$PR_NUM" ]; then
            # If PR number found, use it
            echo "TAG=admin-pr$PR_NUM" >> $GITHUB_OUTPUT
          else
            # If no PR number, use branch name and timestamp
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            SAFE_BRANCH=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9]/-/g')
            echo "TAG=admin-$SAFE_BRANCH-$TIMESTAMP" >> $GITHUB_OUTPUT
          fi

      - uses: Infisical/secrets-action@v1.0.9
        with:
          method: "universal"
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: tanad-nxa-m
          env-slug: prod
          domain: https://secrets.sikka.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u zaaakher --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.admin
          push: true
          tags: ghcr.io/sikka-software/tanad:${{ steps.extract-info.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DIRECTUS_TOKEN=${{ env.DIRECTUS_TOKEN }}
            DIRECTUS_URL=${{ env.DIRECTUS_URL }}
            DATABASE_URL=${{ env.DATABASE_URL }}
            SUPABASE_SERVICE_ROLE_KEY=${{ env.SUPABASE_SERVICE_ROLE_KEY }}
            NEXT_PUBLIC_STRIPE_PRODUCT_ID=${{ env.NEXT_PUBLIC_STRIPE_PRODUCT_ID }}
            NEXT_PUBLIC_STRIPE_SECRET_KEY=${{ env.NEXT_PUBLIC_STRIPE_SECRET_KEY }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            N8N_FORM_SECRET=${{ env.N8N_FORM_SECRET }}
            NEXT_PUBLIC_SUPABASE_URL=${{ env.NEXT_PUBLIC_SUPABASE_URL }}

      - name: Trigger Dokploy Deployment
        run: |
          curl '${{ env.ADMIN_PORTAL_DEPLOY_WEBHOOK }}' \
          --header 'Authorization: Bearer ${{ secrets.A01_COOLIFY_TOKEN }}'
